service: appServices
package:
    artifact: publish.zip
provider:
  name: aws
  runtime: dotnetcore2.0
  stage: ${opt:stage} #read from console input
  region: us-east-1
  role: arn:aws:iam::750472230872:role/appServicesRole
  memorySize: 512 # Overwrite the default memory size. Default is 1024
  timeout: 100 #default is 6
  #deploymentBucket: xpanxion_dev_essentials.web.api.Controllers.${self:provider.region}.deploys
  versionFunctions: false
  stackTags:
   #Environment: ${opt:stage}
  stackPolicy: # Optional CF stack policy. The example below allows updates to all resources except deleting/replacing EC2 instances (use with caution!)
    - Effect: Allow
      Principal: "*"
      Action: "Update:*"
      Resource: "*"
    - Effect: Deny
      Principal: "*"
      Action:
        - Update:Replace
        - Update:Delete
      Condition:
        StringEquals:
          ResourceType:
            - AWS::EC2::Instance

functions:
  appServices:
    name: ${opt:stage}.AppServices
    handler: xpanxion-dev-essentials.web.api::xpanxion_dev_essentials.web.api.LambdaEntryPoint::FunctionHandlerAsync
    environment:
        connectionString: ${file(config.${opt:stage}.yml):connectionString}
        environment: ${file(config.${opt:stage}.yml):environment}
    events:
      - http:
            path: /{proxy+}
            method: any
            authorizer:
                arn: arn:aws:lambda:us-east-1:750472230872:function:${opt:stage}appServicesAuth
                resultTtlInSeconds: 300
                identitySource: method.request.header.Authorization
                identityValidationExpression: ^Bearer.+
            cors:
                origins:
                  - '*'
                headers:
                  - Content-Type
                  - X-Amz-Date
                  - Authorization
                  - Active-Organization
                  - X-Api-Key
                  - X-Amz-Security-Token
                  - Active-Organization
                allowCredentials: true

# The "Resources" your "Functions" use.  Raw AWS CloudFormation goes in here.
resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}Users
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
          - AttributeName: UserName
            AttributeType: S
            Required: Yes
          - AttributeName: Email
            AttributeType: S
          - AttributeName: FirstName
            AttributeType: S
          - AttributeName: LastName
            AttributeType: S
          - AttributeName: Password
            AttributeType: S
          - AttributeName: Phone
            AttributeType: "N"
          - AttributeName: EmailVerified
            AttributeType: BOOL
            NULL: true
          - AttributeName: Deleted
            AttributeType: BOOL
            NULL: true

        KeySchema:
          - AttributeName: Id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: userByEmail
            KeySchema:
              - AttributeName: Email
                KeyType: HASH
            Projection:
              NonKeyAttributes:
                  - FullName
                  - PhoneNumber
                  - IsAppOwner
                  - OrganizationMap
              ProjectionType: INCLUDE
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
    organizationsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}Organizations
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
        KeySchema:
          - AttributeName: Id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
    # logoUploadS3Bucket:
    #     Type: "AWS::S3::Bucket"
    #     Properties:
    #         AccessControl: PublicRead
    #         BucketName: ${opt:stage}-logo.thebeats.io
    #         CorsConfiguration:
    #             CorsRules:
    #                 - AllowedHeaders: 
    #                     - "*"
    #                   AllowedMethods:
    #                     - GET
    #                   AllowedOrigins:
    #                     - "*"
    #                   MaxAge: 3600
                